{"ast":null,"code":"var _jsxFileName = \"/Users/ronghaozeng/playlister_HW-/client/src/components/EditToolbar.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditToolbar() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  function currentList() {\n    return store.currentList;\n  }\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n  function handleAddSong() {\n    if (store.currentList) {\n      let newSong = {\n        \"title\": \"Untitled\",\n        \"artist\": \"unknown\",\n        \"youTubeId\": \"dQw4w9WgXcQ\"\n      };\n      store.addAddSongTransaction(store.getPlaylistSize(), newSong);\n    }\n  }\n  let editStatus = false;\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: currentList,\n      value: \"+\",\n      onClick: handleAddSong,\n      className: enabledButtonClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: currentList,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: currentList,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: currentList,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n_c = EditToolbar;\nexport default EditToolbar;\nvar _c;\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","currentList","handleUndo","undo","handleRedo","redo","handleClose","push","closeCurrentList","handleAddSong","newSong","addAddSongTransaction","getPlaylistSize","editStatus","isListNameEditActive"],"sources":["/Users/ronghaozeng/playlister_HW-/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport { useHistory } from 'react-router-dom'\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const history = useHistory();\n\n    let enabledButtonClass = \"playlister-button\";\n    function currentList(){\n        return store.currentList;\n    }\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleClose() {\n        history.push(\"/\");\n        store.closeCurrentList();\n    }\n    function handleAddSong(){\n        if(store.currentList){\n            let newSong = {\n                \"title\":\"Untitled\",\n                \"artist\":\"unknown\",\n                \"youTubeId\":\"dQw4w9WgXcQ\"\n            };\n            store.addAddSongTransaction(store.getPlaylistSize(),newSong);\n        }\n    }\n\n    let editStatus = false;\n    if (store.isListNameEditActive) {\n        editStatus = true;\n    }\n    return (\n        <span id=\"edit-toolbar\">\n            <input\n                type=\"button\"\n                id='add-song-button'\n                disabled={currentList}\n                value=\"+\"\n                onClick={handleAddSong}\n                className={enabledButtonClass}\n            />\n            <input\n                type=\"button\"\n                id='undo-button'\n                disabled={currentList}\n                value=\"⟲\"\n                className={enabledButtonClass}\n                onClick={handleUndo}\n            />\n            <input\n                type=\"button\"\n                id='redo-button'\n                disabled={currentList}\n                value=\"⟳\"\n                className={enabledButtonClass}\n                onClick={handleRedo}\n            />\n            <input\n                type=\"button\"\n                id='close-button'\n                disabled={currentList}\n                value=\"&#x2715;\"\n                className={enabledButtonClass}\n                onClick={handleClose}\n            />\n        </span>);\n}\n\nexport default EditToolbar;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACC,kBAAkB,CAAC;EAChD,MAAMI,OAAO,GAAGH,UAAU,EAAE;EAE5B,IAAII,kBAAkB,GAAG,mBAAmB;EAC5C,SAASC,WAAW,GAAE;IAClB,OAAOH,KAAK,CAACG,WAAW;EAC5B;EACA,SAASC,UAAU,GAAG;IAClBJ,KAAK,CAACK,IAAI,EAAE;EAChB;EACA,SAASC,UAAU,GAAG;IAClBN,KAAK,CAACO,IAAI,EAAE;EAChB;EACA,SAASC,WAAW,GAAG;IACnBP,OAAO,CAACQ,IAAI,CAAC,GAAG,CAAC;IACjBT,KAAK,CAACU,gBAAgB,EAAE;EAC5B;EACA,SAASC,aAAa,GAAE;IACpB,IAAGX,KAAK,CAACG,WAAW,EAAC;MACjB,IAAIS,OAAO,GAAG;QACV,OAAO,EAAC,UAAU;QAClB,QAAQ,EAAC,SAAS;QAClB,WAAW,EAAC;MAChB,CAAC;MACDZ,KAAK,CAACa,qBAAqB,CAACb,KAAK,CAACc,eAAe,EAAE,EAACF,OAAO,CAAC;IAChE;EACJ;EAEA,IAAIG,UAAU,GAAG,KAAK;EACtB,IAAIf,KAAK,CAACgB,oBAAoB,EAAE;IAC5BD,UAAU,GAAG,IAAI;EACrB;EACA,oBACI;IAAM,EAAE,EAAC,cAAc;IAAA,wBACnB;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,iBAAiB;MACpB,QAAQ,EAAEZ,WAAY;MACtB,KAAK,EAAC,GAAG;MACT,OAAO,EAAEQ,aAAc;MACvB,SAAS,EAAET;IAAmB;MAAA;MAAA;MAAA;IAAA,QAChC,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAEC,WAAY;MACtB,KAAK,EAAC,QAAG;MACT,SAAS,EAAED,kBAAmB;MAC9B,OAAO,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAED,WAAY;MACtB,KAAK,EAAC,QAAG;MACT,SAAS,EAAED,kBAAmB;MAC9B,OAAO,EAAEI;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,cAAc;MACjB,QAAQ,EAAEH,WAAY;MACtB,KAAK,EAAC,QAAU;MAChB,SAAS,EAAED,kBAAmB;MAC9B,OAAO,EAAEM;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AACf;AAAC,GApEQT,WAAW;EAAA,QAEAD,UAAU;AAAA;AAAA,KAFrBC,WAAW;AAsEpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}